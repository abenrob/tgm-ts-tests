{"version":3,"file":"targomo-leaflet.umd.js","sources":["../../src/geometry/projection.ts","../../src/geometry/projectedPolygon.ts","../../src/geometry/clip.ts","../../src/svg/options.ts","../../src/svg/render.ts","../../src/util/minMaxSchedule.ts","../../src/overlay/polygonOverlayElement.ts","../../src/leaflet/polygonOverlay.ts","../../src/leaflet/tileLayer.ts","../../src/leaflet/multigraphTileLayer.ts"],"sourcesContent":["const transformEPSG3857 = ((a: number, b: number, c: number, d: number) => {\n  return function(x: number, y: number, scale: number = 1) {\n    x = scale * (a * x + b)\n    y = scale * (c * y + d)\n    return {x, y}\n  }\n}) (0.5 / (Math.PI), 0.5, -(0.5 / (Math.PI)), 0.5)\n\nexport function webMercatorToLeaflet(x: number, y: number, scale: number = 1) {\n  return transformEPSG3857(x / 6378137, y / 6378137, scale)\n}\n","import { MultipolygonData, PolygonData } from './types'\nimport * as geometry from './projection'\n\nexport interface ProjectedBoundsData {\n  southWest: ProjectedPointData\n  northEast: ProjectedPointData\n}\n\n/**\n *\n */\nexport class ProjectedBounds implements ProjectedBoundsData {\n  southWest: ProjectedPoint = new ProjectedPoint(Infinity, Infinity)\n  northEast: ProjectedPoint = new ProjectedPoint(-Infinity, -Infinity)\n\n  constructor(bounds?: {\n    southWest: {x: number, y: number}\n    northEast: {x: number, y: number}\n  }) {\n    if (bounds) {\n      this.southWest = new ProjectedPoint(bounds.southWest.x, bounds.southWest.y)\n      this.northEast = new ProjectedPoint(bounds.northEast.x, bounds.northEast.y)\n    }\n  }\n\n  expandPoint(x: number, y: number) {\n    this.southWest.x = Math.min(this.southWest.x, x)\n    this.northEast.x = Math.max(this.northEast.x, x)\n    this.southWest.y = Math.min(this.southWest.y, y)\n    this.northEast.y = Math.max(this.northEast.y, y)\n  }\n\n  expand(bounds: ProjectedBoundsData) {\n    this.expandPoint(bounds.northEast.x, bounds.northEast.y)\n    this.expandPoint(bounds.southWest.x, bounds.southWest.y)\n  }\n\n  modifyIntersect(bounds: ProjectedBoundsData) {\n    this.southWest.x = Math.max(this.southWest.x, bounds.southWest.x)\n    this.northEast.x = Math.min(this.northEast.x, bounds.northEast.x)\n    this.southWest.y = Math.max(this.southWest.y, bounds.southWest.y)\n    this.northEast.y = Math.min(this.northEast.y, bounds.northEast.y)\n    return this\n  }\n\n  // modifyExpand(bounds: ProjectedBounds) {\n  //   this.southWest.x = Math.min(this.southWest.x, bounds.southWest.x)\n  //   this.northEast.x = Math.max(this.northEast.x, bounds.northEast.x)\n  //   this.southWest.y = Math.min(this.southWest.y, bounds.southWest.y)\n  //   this.northEast.y = Math.max(this.northEast.y, bounds.northEast.y)\n  //   return this\n  // }\n\n  contains(bounds: ProjectedBoundsData) {\n    return (\n      this.northEast.x >= bounds.northEast.x &&\n      this.northEast.y >= bounds.northEast.y &&\n      this.southWest.x <= bounds.southWest.x &&\n      this.southWest.y <= bounds.southWest.y\n    )\n  }\n\n  intersects(bounds: ProjectedBoundsData) {\n    return !(\n      this.northEast.x < bounds.southWest.x ||\n      this.northEast.y < bounds.southWest.y ||\n      this.southWest.x > bounds.northEast.x ||\n      this.southWest.y > bounds.northEast.y\n    )\n  }\n\n  growOutwardsFactor(factor: number = 1) {\n    let diffX = (this.northEast.x - this.southWest.x) * factor\n    let diffY = (this.northEast.y - this.southWest.y) * factor\n\n    this.northEast.x += diffX\n    this.northEast.y += diffY\n    this.southWest.x -= diffX\n    this.southWest.y -= diffY\n\n    return this\n  }\n\n  growOutwardsAmount(amount: number) {\n    this.northEast.x += amount\n    this.northEast.y += amount\n    this.southWest.x -= amount\n    this.southWest.y -= amount\n\n    return this\n  }\n\n  toLineString() {\n    return [\n      // new ProjectedPoint(this.southWest.x, this.southWest.y),\n      // new ProjectedPoint(this.northEast.x, this.southWest.y),\n      // new ProjectedPoint(this.northEast.x, this.northEast.y),\n      // new ProjectedPoint(this.southWest.x, this.northEast.y),\n      new ProjectedPoint(this.southWest.x, this.northEast.y),\n      new ProjectedPoint(this.northEast.x, this.northEast.y),\n      new ProjectedPoint(this.northEast.x, this.southWest.y),\n      new ProjectedPoint(this.southWest.x, this.southWest.y),\n    ]\n  }\n\n  reproject(project: (x: number, y: number) => {x: number, y: number}) {\n    return new ProjectedBounds({\n      northEast: project(this.northEast.x, this.northEast.y),\n      southWest: project(this.southWest.x, this.southWest.y),\n    })\n  }\n\n  width() {\n    return this.northEast.x - this.southWest.x\n  }\n\n\n  height() {\n    return this.southWest.y - this.northEast.y\n  }\n\n  left() {\n    return this.southWest.x\n  }\n\n  top() {\n    return this.northEast.y\n  }\n}\n\nexport interface ProjectedPointData {\n  x: number\n  y: number\n}\n\n/**\n *\n */\nexport class ProjectedPoint implements ProjectedPointData {\n  constructor(public x: number, public y: number) {\n  }\n\n  /**\n   * Checks if the given three points are collinear.\n   */\n  isCollinear(before: ProjectedPoint, after: ProjectedPoint, tolerance: number) {\n    if (before.x == after.x && before.y == after.y) {\n      return false\n    }\n\n    if (before.x == this.x && this.x == after.x) {\n      return true\n    }\n\n    if (before.y == this.y && this.y == after.y) {\n      return true\n    }\n\n    const val = (before.x * (this.y - after.y) + this.x * (after.y - before.y) + after.x * (before.y - this.y))\n    return (val < tolerance  && val > -tolerance && before.x != after.x && before.y != after.y)\n  }\n\n  /**\n   *\n   * @param point\n   */\n  euclideanDistance(point: ProjectedPoint) {\n    return Math.sqrt(Math.pow(this.x - point.x, 2) + Math.pow(this.y - point.y, 2))\n  }\n}\n\n/**\n *\n */\nexport class ProjectedLineString {\n  points: ProjectedPoint[]\n  bounds3857: ProjectedBounds = new ProjectedBounds()\n\n  constructor(coordinates: [number, number][]) {\n    this.points = coordinates.map(coordinate => {\n      this.bounds3857.expandPoint(coordinate[0], coordinate[1])\n\n      const pair = geometry.webMercatorToLeaflet(coordinate[0], coordinate[1], 1)\n      return new ProjectedPoint(pair.x, pair.y)\n    })\n  }\n}\n\n/**\n *\n */\nexport class ProjectedPolygon {\n  travelTime: number\n  area: number\n  lineStrings: ProjectedLineString[]\n  bounds3857: ProjectedBounds = new ProjectedBounds()\n\n  constructor(data: PolygonData) {\n    this.travelTime = data.travelTime\n    this.area = data.area\n\n    this.lineStrings = [new ProjectedLineString(data.outerBoundary)]\n    this.bounds3857.expand(this.lineStrings[0].bounds3857)\n\n    if (data.innerBoundary) {\n      data.innerBoundary.forEach(innerBoundary => {\n        const lineString = new ProjectedLineString(innerBoundary)\n        this.lineStrings.push(lineString)\n        this.bounds3857.expand(lineString.bounds3857)\n      })\n    }\n  }\n\n  getOuterBoundary() {\n    return this.lineStrings[0]\n  }\n\n  getInnerBoundary() {\n    return this.lineStrings.slice(1)\n  }\n}\n\n/**\n *\n */\nexport class ProjectedMultiPolygon {\n  polygons: {[travelTime: number]: ProjectedPolygon[]} = {}\n  bounds3857: ProjectedBounds = new ProjectedBounds()\n\n  constructor(data: MultipolygonData[]) {\n    data.forEach(multipolygonData => {\n      multipolygonData.polygons.forEach(polygonData => {\n        const polygon = new ProjectedPolygon(polygonData)\n        this.polygons[polygon.travelTime] = this.polygons[polygon.travelTime] || []\n        this.polygons[polygon.travelTime].push(polygon)\n        this.bounds3857.expand(polygon.bounds3857)\n      })\n    })\n  }\n\n  forEach(callback: (travelTime: number, polygon: ProjectedPolygon[], i?: number) => void) {\n    let keys = Object.keys(this.polygons).map(key => +key).sort((a, b) => b - a)\n    keys.forEach((key, i) => callback(+key, this.polygons[<any>key], i))\n  }\n}\n","import { ProjectedPoint } from './projectedPolygon'\n\n/**\n * [clip clipping like sutherland http://rosettacode.org/wiki/Sutherland-Hodgman_polygon_clipping#JavaScript]\n */\nexport function clip(subjectPolygon: ProjectedPoint[], clipPolygon: ProjectedPoint[]) {\n  let cp1: ProjectedPoint, cp2: ProjectedPoint, s: ProjectedPoint, e: ProjectedPoint\n\n  let inside = function(p: ProjectedPoint) {\n    return (cp2.x - cp1.x) * (p.y - cp1.y) > (cp2.y - cp1.y) * (p.x - cp1.x)\n  }\n\n  let intersection = function() {\n      let dc = new ProjectedPoint(cp1.x - cp2.x, cp1.y - cp2.y),\n          dp = new ProjectedPoint(s.x - e.x, s.y - e.y),\n          n1 = cp1.x * cp2.y - cp1.y * cp2.x,\n          n2 = s.x * e.y - s.y * e.x,\n          n3 = 1.0 / (dc.x * dp.y - dc.y * dp.x)\n\n      return new ProjectedPoint((n1 * dp.x - n2 * dc.x) * n3, (n1 * dp.y - n2 * dc.y) * n3)\n  }\n\n  let outputList = subjectPolygon\n  cp1 = clipPolygon[clipPolygon.length - 1]\n\n  for (let j in clipPolygon) {\n      cp2 = clipPolygon[j]\n\n      let inputList = outputList\n      outputList = []\n\n      s = inputList[inputList.length - 1] // last on the input list\n\n      for (let i in inputList) {\n        e = inputList[i]\n\n          if (inside(e)) {\n            if (!inside(s)) {\n              outputList.push(intersection())\n            }\n            outputList.push(e)\n          } else if (inside(s)) {\n            outputList.push(intersection())\n          }\n          s = e\n      }\n      cp1 = cp2\n  }\n\n  return outputList\n}\n","const COLORS = ['#006837', '#39B54A', '#8CC63F', '#F7931E', '#F15A24', '#C1272D']\nconst COLORS_MAP: {[index: number]: string} = {}\n\nCOLORS.forEach((color, i) => {\n  COLORS_MAP[(i + 1) * 300] = color\n})\n\nexport interface PolygonRenderColorComplexOption {\n  color?: string\n  opacity?: number\n}\n\nfunction isPolygonRenderColorComplexOption(option: PolygonRenderColorOption): option is PolygonRenderColorComplexOption {\n  return option && (option as any).color != null\n}\n\nexport type PolygonRenderColorOption = PolygonRenderColorComplexOption | string\n\nexport class PolygonRenderOptionsData {\n  inverse: boolean = false\n  // colors: ({[edgeWeight: number]: PolygonRenderColorOption}) | (PolygonRenderColorOption[]) = COLORS\n  colors: {[edgeWeight: number]: PolygonRenderColorOption} = COLORS_MAP\n  opacity: number = 0.5\n  strokeWidth: number = 5\n}\n\nexport class PolygonRenderOptions extends PolygonRenderOptionsData {\n  constructor(data: PolygonRenderOptionsData) {\n    super()\n\n    Object.assign(this, data)\n  }\n\n  getColorOpacity(travelTime: number, index: number): {color: string, opacity: number} {\n    let option: PolygonRenderColorOption = null\n    if (this.colors instanceof Array) {\n      option = this.colors[index]\n    } else {\n      option = this.colors[travelTime]\n    }\n\n    if (isPolygonRenderColorComplexOption(option)) {\n      return {\n        color: option.color || '#ccc',\n        opacity: option.opacity || 1\n      }\n    } else {\n      return {\n        color: option || '#ccc',\n        opacity: 1\n      }\n    }\n  }\n}\n","import * as geometry from '../geometry/projection'\nimport { ProjectedMultiPolygon, ProjectedPolygon, ProjectedPoint, ProjectedBounds } from '../geometry/projectedPolygon';\nimport * as simplify from '../geometry/clip'\n// import * as collinear from '../geometry/collinear'\nimport { PolygonRenderOptions } from './options'\nexport { PolygonRenderOptionsData } from './options'\n\nlet idCounter = 0\n\nfunction renderPath(svgData: string, elementOptions: {opacity: number, color: string, strokeWidth: number}) {\n  let initialOpacity = elementOptions.opacity\n\n  return `\n    <g style='opacity: ${initialOpacity}'>\n      <path style='stroke: ${elementOptions.color};\n            fill: ${elementOptions.color};\n            stroke-opacity: ${elementOptions.opacity};\n            stroke-width: ${elementOptions.strokeWidth};\n            fill-opacity: ${elementOptions.opacity}'\n\n            d='${svgData}'/>\n    </g>\n  `\n}\n\nfunction renderElement(children: any[], width: number, height: number) {\n  return `\n    <svg  height=\"100%\" width=\"100%\" viewbox=\"0 0 ${width} ${height}\"\n          style='opacity: 1; stroke-linejoin:round; stroke-linecap:round; fill-rule: evenodd'\n          xmlns='http://www.w3.org/2000/svg'>\n          ${children.join('\\n')}\n    </svg>`\n}\n\nfunction renderInverseElement(children: any[], width: number, height: number) {\n  let id = 'tgm:inverse:' + idCounter++\n  const svgFrame = `M 0 0 L ${width} 0 L ${width} ${height} L 0 ${height} z`\n  const frame = `<path style='mask: url(#mask_${id})' d='${svgFrame}'/>`\n  const newSvg = `\n    <defs>\n      <mask id='mask_${id}'>\n          <path style='fill-opacity:1; stroke: white; fill:white;' d='${svgFrame}'/>\"\n          ${children.join('\\n')}\n      </mask>\n    </defs>\n  `\n\n  return  `\n    <svg  height=\"100%\" width=\"100%\" viewbox=\"0 0 ${width} ${height}\"\n          style='opacity: 1; stroke-linejoin:round; stroke-linecap:round; fill-rule: evenodd'\n          xmlns='http://www.w3.org/2000/svg'>\n          ${frame}\n          ${newSvg}\n    </svg>`\n}\n\n/**\n *\n * @param viewport\n * @param bounds3857\n * @param zoomFactor\n * @param multipolygons\n */\nexport function render(viewport: ProjectedBounds,\n                       bounds3857: ProjectedBounds,\n                       zoomFactor: number,\n                       multipolygons: ProjectedMultiPolygon,\n                       options: PolygonRenderOptions\n                      ) {\n  const pairMin = geometry.webMercatorToLeaflet(bounds3857.southWest.x, bounds3857.southWest.y, zoomFactor)\n  const pairMax = geometry.webMercatorToLeaflet(bounds3857.northEast.x, bounds3857.northEast.y, zoomFactor)\n\n  if (pairMax.y < pairMin.y) {\n    [pairMax.y, pairMin.y] = [pairMin.y, pairMax.y]\n  }\n\n  const xMinLeaflet = Math.floor(pairMin.x)\n  const yMinLeaflet = Math.floor(pairMin.y)\n  const xMaxLeaflet = Math.ceil(pairMax.x)\n  const yMaxLeaflet = Math.ceil(pairMax.y)\n\n\n  let projectedViewport = new ProjectedBounds(viewport)\n                            .reproject(geometry.webMercatorToLeaflet)\n\n  let projectedViewportLineString = projectedViewport.toLineString()\n\n  function renderLineString(pathData: any[], points: ProjectedPoint[]) {\n    // points = collinear.filterCollinear(points, 1 / (zoomFactor * 100000))\n    points = simplify.clip(points, projectedViewportLineString)\n\n    points.forEach((point, i) => {\n      let suffix = i > 0 ? 'L' : 'M'\n      const x = Math.round((point.x) * zoomFactor) - xMinLeaflet\n      const y = Math.round((point.y) * zoomFactor) - yMinLeaflet\n      const generatedPoint = `${suffix} ${x} ${y}`\n      pathData.push(generatedPoint)\n    })\n\n    if (pathData.length > 0) {\n      pathData.push('z') // svgz\n    }\n\n    return pathData\n  }\n\n  function renderPolygon(polygon: ProjectedPolygon) {\n    let pathData: any = []\n\n    if (viewport.intersects(polygon.bounds3857)) {\n      renderLineString(pathData, polygon.getOuterBoundary().points)\n      polygon.getInnerBoundary().forEach(innerBoundary => {\n        if (viewport.intersects(innerBoundary.bounds3857)) {\n          renderLineString(pathData, innerBoundary.points)\n        }\n      })\n    }\n\n    return pathData\n  }\n\n  const children: any[] = []\n  multipolygons.forEach((travelTime, polygons, i) => {\n    const svgData = polygons.map(item => renderPolygon(item).join(' ')).join(' ')\n    if (svgData.length != 0) {\n      const polygonOption = options.getColorOpacity(travelTime, i)\n      children.push(renderPath(svgData, {\n        ...polygonOption,\n        strokeWidth: options.strokeWidth,\n        color: options.inverse ? 'black' : polygonOption.color\n      }))\n    }\n  })\n\n  let width = Math.ceil(Math.abs(xMaxLeaflet - xMinLeaflet))\n  let height = Math.ceil(Math.abs(yMaxLeaflet - yMinLeaflet))\n\n  let content: string\n  if (options.inverse) {\n    content = renderInverseElement(children, width, height)\n  } else {\n    content = renderElement(children, width, height)\n  }\n\n  return {content, width, height}\n}\n","export class MinMaxSchedule {\n  private shortTimeout: any\n  private longTimeout: any\n\n  constructor(private min: number = 200, private max: number = 700) {\n  }\n\n  schedule(callback: () => any) {\n    const action = () => {\n      clearTimeout(this.longTimeout)\n      clearTimeout(this.shortTimeout)\n\n      this.longTimeout = null\n      this.shortTimeout = null\n\n      callback()\n    }\n\n    if (!this.longTimeout) {\n      this.longTimeout = setTimeout(action, this.max)\n    }\n\n    clearTimeout(this.shortTimeout)\n    this.shortTimeout = setTimeout(action, this.min)\n  }\n\n  scheduleMaximum(callback: () => any) {\n    const action = () => {\n      clearTimeout(this.longTimeout)\n\n      this.longTimeout = null\n\n      callback()\n    }\n\n    if (!this.longTimeout) {\n      this.longTimeout = setTimeout(action, this.max)\n    }\n\n    clearTimeout(this.shortTimeout)\n  }\n}\n","import * as svg from '../svg/render'\nimport {geometry, BoundingBox} from '@targomo/core'\nimport { MultipolygonData } from '../geometry/types'\nimport { ProjectedMultiPolygon, ProjectedBounds, ProjectedBoundsData } from '../geometry/projectedPolygon'\nimport { MinMaxSchedule } from '../util/minMaxSchedule'\nimport { PolygonRenderOptions } from '../svg/options';\n\n\nexport interface PolygonOverlayElementPlugin {\n  getZoom(): number\n  getViewPort(): ProjectedBoundsData\n  getElementPixels(bounds: BoundingBox): ProjectedBoundsData\n}\n\n/**\n *\n */\nexport class PolygonOverlayElement {\n  private divElement: HTMLDivElement\n  bounds: BoundingBox\n  private model: ProjectedMultiPolygon\n  private renderTimeout: MinMaxSchedule = new MinMaxSchedule(300, 3000)\n\n  private currentPixelBounds: ProjectedBounds\n\n  /**\n   *\n   * @param map\n   */\n  constructor(private plugin: PolygonOverlayElementPlugin,\n              private options: svg.PolygonRenderOptionsData) {\n  }\n\n  getElement() {\n    return this.divElement\n  }\n\n  /**\n   *\n   */\n  draw(immediately: boolean = false) {\n    if (immediately) {\n      this.resize()\n      this.render()\n      this.divElement.style.transform = null\n    } else {\n      if (this.divElement && this.bounds) {\n        const bounds = new ProjectedBounds(this.plugin.getElementPixels(this.bounds))\n\n        const div = this.divElement\n        const dx = Math.round(bounds.left() - this.currentPixelBounds.left())\n        const dy = Math.round(bounds.top() - this.currentPixelBounds.top())\n\n        const scaleX = bounds.width() / this.currentPixelBounds.width()\n        const scaleY = bounds.height() / this.currentPixelBounds.height()\n\n        if (scaleY !== 1 || scaleX !== 1) {\n          div.style.transform = `translate3d(${dx}px, ${dy}px, 0) scale3d(${scaleX}, ${scaleY}, 1)`\n        } else if (dx !== 0 || dy !== 0) {\n          div.style.transform = `translate3d(${dx}px, ${dy}px, 0)`\n        }\n      }\n\n      this.renderTimeout.scheduleMaximum(() => {\n        this.render()\n        this.divElement.style.transform = null\n      })\n    }\n  }\n\n  private resize() {\n    if (!this.divElement || !this.bounds) {\n      return\n    }\n\n    const bounds = this.currentPixelBounds = new ProjectedBounds(this.plugin.getElementPixels(this.bounds))\n\n    const div = this.divElement\n\n    div.style.left = bounds.left() + 'px'\n    div.style.top = bounds.top() + 'px'\n    div.style.width = bounds.width() + 'px'\n    div.style.height = bounds.height() + 'px'\n    div.style.transform = null\n  }\n\n  /**\n   *\n   */\n  initElement() {\n    const div = document.createElement('div')\n    div.style.borderStyle = 'none'\n    div.style.borderWidth = '0px'\n    div.style.position = 'absolute'\n    div.style.opacity = ('' + this.options.opacity) || '0.5'\n\n    ; (<any>div).style['backface-visibility'] = 'hidden'\n    ; (<any>div).style['perspective'] = 1000\n    ; (<any>div).style['transform-origin'] = '0 0 0'\n    ; (<any>div).style['will-change'] = 'transform'\n\n    this.divElement = div\n\n    return this.divElement\n  }\n\n  /**\n   *\n   */\n  onRemove() {\n    this.divElement.parentNode.removeChild(this.divElement)\n    this.divElement = null\n  }\n\n  /**\n   *\n   * @param multipolygon\n   */\n  setData(multipolygon: MultipolygonData[]) {\n    if (multipolygon) {\n      this.model = new ProjectedMultiPolygon(multipolygon)\n    } else {\n      this.model = null\n    }\n    this.render()\n  }\n\n  setInverse(inverse: boolean) {\n    this.options.inverse = inverse\n    this.render()\n  }\n\n  setColors(colors: {[edgeWeight: number]: string}) {\n    this.options.colors = colors\n    this.render()\n  }\n\n  setOpacity(opacity: number) {\n    this.options.opacity = opacity\n\n    if (this.divElement) {\n      this.divElement.style.opacity = '' + this.options.opacity || '0.5'\n    }\n  }\n\n  setStrokeWidth(strokeWidth: number) {\n    this.options.strokeWidth = strokeWidth\n    this.render()\n  }\n\n  private boundsCalculation(growFactor: number) {\n    const projectedMultiPolygon = this.model\n    const inverse = this.options.inverse\n\n    const viewPort = new ProjectedBounds(this.plugin.getViewPort()) // .growOutwardsAmount(this.options && this.options.strokeWidth || 0)\n    const bounds = new ProjectedBounds(viewPort)\n    let newBounds = new ProjectedBounds(bounds).growOutwardsFactor(growFactor).modifyIntersect(projectedMultiPolygon.bounds3857)\n\n    if (inverse) {\n      newBounds.expand(viewPort)\n      newBounds.growOutwardsFactor(growFactor)\n    }\n\n    bounds.growOutwardsFactor(growFactor)\n\n    // pixel to\n    const southWest = geometry.webMercatorToLatLng(viewPort.southWest, undefined)\n    const northEast = geometry.webMercatorToLatLng(viewPort.northEast, undefined)\n    const newPixelBounds = this.plugin.getElementPixels({southWest, northEast})\n    const ratio = Math.abs((viewPort.northEast.x - viewPort.southWest.x) / newPixelBounds.northEast.x - newPixelBounds.southWest.x)\n    newBounds.growOutwardsAmount(this.options && (ratio * this.options.strokeWidth) || 0)\n    //\n\n    return {bounds, newBounds}\n  }\n\n  private render(resize = true) {\n    if (!this.divElement) {\n      return\n    }\n\n    if (!this.model) {\n      this.divElement.innerHTML = ''\n      return\n    }\n\n    const zoom = this.plugin.getZoom()\n    let zoomFactor = Math.pow(2, zoom) * 256\n    zoomFactor = Math.min(10000000, zoomFactor)\n\n    const growFactor = 0.1\n    const {bounds, newBounds} = this.boundsCalculation(growFactor)\n\n    const {content} = svg.render(bounds, newBounds, zoomFactor, this.model, new PolygonRenderOptions(this.options))\n\n    this.divElement.innerHTML = content\n\n    const southWest = geometry.webMercatorToLatLng(newBounds.southWest, undefined)\n    const northEast = geometry.webMercatorToLatLng(newBounds.northEast, undefined)\n\n    this.bounds = {southWest, northEast}\n\n    if (resize) {\n      this.resize()\n    }\n  }\n}\n","import * as L from 'leaflet'\nimport { ProjectedBounds, ProjectedBoundsData } from '../geometry/projectedPolygon'\nimport {PolygonOverlayElement} from '../overlay/polygonOverlayElement'\nimport { BoundingBox, geometry } from '@targomo/core'\nimport { MultipolygonData } from '../geometry/types'\nimport * as svg from '../svg/render'\nimport { PolygonRenderColorOption } from '../svg/options'\n\nexport class LeafletPolygonOverlayOptions extends svg.PolygonRenderOptionsData {\n}\n\n/**\n *\n */\nexport class TgmLeafletPolygonOverlay extends L.Layer {\n  private element: PolygonOverlayElement\n  private readyResolve: () => void\n  private readyPromise = new Promise(resolve => this.readyResolve = resolve)\n  private options: LeafletPolygonOverlayOptions\n\n  /**\n   *\n   * @param options\n   */\n  constructor(options?: Partial<LeafletPolygonOverlayOptions>) {\n    super()\n\n    this.options = Object.assign(new LeafletPolygonOverlayOptions(), options || {})\n  }\n\n  /**\n   *\n   * @param multipolygon\n   */\n  async setData(multipolygon: MultipolygonData[]) {\n    await this.readyPromise\n    if (this.element) {\n      this.element.setData(multipolygon)\n    }\n  }\n\n  /**\n   *\n   */\n  draw() {\n    if (this.element) {\n      L.DomUtil.setTransform(this.element.getElement(), new L.Point(0, 0), null)\n      this.element.draw(true)\n    }\n  }\n\n  /**\n   *\n   * @param map\n   */\n  onAdd(map: L.Map) {\n    this.element = new PolygonOverlayElement({\n      getZoom() {\n        return map.getZoom()\n      },\n\n      getViewPort(): ProjectedBoundsData {\n        const bounds = map.getBounds()\n        return new ProjectedBounds({\n          northEast: geometry.latLngToWebMercator({\n            lng: bounds.getNorthEast().lng,\n            lat: bounds.getNorthEast().lat,\n          }),\n          southWest: geometry.latLngToWebMercator({\n            lng: bounds.getSouthWest().lng,\n            lat: bounds.getSouthWest().lat,\n          })\n        })\n      },\n\n      getElementPixels(bounds: BoundingBox): ProjectedBoundsData {\n        const northEast = map.latLngToLayerPoint(bounds.northEast)\n        const southWest = map.latLngToLayerPoint(bounds.southWest)\n\n        return {northEast, southWest}\n      }\n    }, this.options)\n\n    const div = this.element.initElement()\n    div.style.transformOrigin = 'center'\n    L.DomUtil.addClass(div, 'leaflet-zoom-' + (true ? 'animated' : 'hide'))\n\n    map.getPanes().overlayPane.appendChild(div)\n\n    // const draw = () => this.draw()\n\n    map.on('moveend', this.draw, this)\n    map.on('resize',  this.draw, this)\n    map.on('zoomend',  this.draw, this)\n\n    const animated = this._map.options.zoomAnimation && L.Browser.any3d\n    if (animated) {\n      map.on('zoomanim', (e: L.ZoomAnimEvent) => {\n        if (this.element.bounds) {\n\n          const scale = map.getZoomScale(e.zoom, map.getZoom())\n\n          const pos1 = (map as any)._latLngToNewLayerPoint(this.element.bounds.southWest, e.zoom, e.center).round()\n          const pos2 = (map as any)._latLngToNewLayerPoint(this.element.bounds.northEast, e.zoom, e.center).round()\n          const cur1 = (map as any)._latLngToNewLayerPoint(this.element.bounds.southWest, map.getZoom(), map.getCenter()).round()\n          const cur2  = (map as any)._latLngToNewLayerPoint(this.element.bounds.northEast, map.getZoom(), map.getCenter()).round()\n\n          const pos = {x: (pos1.x + pos2.x) / 2, y: (pos1.y + pos2.y) / 2}\n          const cur = {x: (cur1.x + cur2.x) / 2, y: (cur1.y + cur2.y) / 2}\n\n          L.DomUtil.setTransform(div, new L.Point(pos.x - cur.x, pos.y - cur.y), scale)\n        }\n      })\n    }\n\n    this.readyResolve()\n    this.draw()\n\n    return this\n  }\n\n  onRemove(): this {\n    if (this.element) {\n      this.element.onRemove()\n      this.element = null\n    }\n    return this\n  }\n\n  /**\n   *\n   * @param inverse\n   */\n  setInverse(inverse: boolean) {\n    this.options.inverse = inverse\n    this.draw()\n  }\n\n  /**\n   *\n   * @param colors\n   */\n  setColors(colors: {[edgeWeight: number]: PolygonRenderColorOption}) {\n    this.options.colors = colors\n    this.draw()\n  }\n\n  /**\n   *\n   * @param opacity\n   */\n  setOpacity(opacity: number) {\n    this.options.opacity = opacity\n\n    if (this.element) {\n      const div = this.element.getElement()\n      div.style.opacity = this.options.opacity != null ? ('' + this.options.opacity) : '0.5'\n    }\n  }\n\n  /**\n   *\n   * @param strokeWidth\n   */\n  setStrokeWidth(strokeWidth: number) {\n    this.options.strokeWidth = strokeWidth\n    this.draw()\n  }\n}\n\n","import * as L from 'leaflet';\nimport { TargomoClient } from '@targomo/core';\n\nexport class TgmLeafletTileLayer extends L.TileLayer {\n    constructor(tgmClient: TargomoClient, basemapName: string, options: L.TileLayerOptions) {\n\n        if (!basemapName && !tgmClient.basemaps.basemapsLookup[basemapName]) {\n            throw new Error('valid style name required to access Targomo basemap');\n        }\n\n        const tileUrl = 'https://maps.targomo.com/styles/' +\n            tgmClient.basemaps.basemapsLookup[basemapName] +\n            '/rendered/{z}/{x}/{y}.png?key=' +\n            tgmClient.serviceKey;\n\n        super(tileUrl , options);\n    }\n\n    static getTileLayerList(tgmClient: TargomoClient): {[basemapName: string]: TgmLeafletTileLayer} {\n        const tileLayerList: {[basemapName: string]: TgmLeafletTileLayer} = {}\n        tgmClient.basemaps.basemapNames.forEach(basemapName => {\n            tileLayerList[basemapName] = new TgmLeafletTileLayer(tgmClient, basemapName, {});\n        });\n        return tileLayerList;\n    }\n}\n","import * as L from 'leaflet';\nimport 'leaflet.vectorgrid/dist/Leaflet.VectorGrid.bundled.js';\n\nimport { TargomoClient, LatLngIdTravelMode, MultigraphRequestOptions } from '@targomo/core';\nexport class TgmLeafletMultigraphTileLayer {\n    tgmClient: TargomoClient;\n    layer: any;\n    map: L.Map;\n    multigraphOptions: MultigraphRequestOptions;\n    sources: LatLngIdTravelMode[];\n    vectorTileoptions: {vectorTileLayerStyles: any};\n    constructor(\n        tgmClient: TargomoClient,\n        sources: LatLngIdTravelMode[],\n        multigraphOptions: MultigraphRequestOptions,\n        vectorTileoptions: {vectorTileLayerStyles: any}) {\n\n        this.tgmClient = tgmClient;\n\n        this.update(multigraphOptions, vectorTileoptions, sources);\n    }\n\n    async addTo(map: L.Map) {\n        if (!this.layer) {\n            await this.createLayer();\n        }\n        this.map = map;\n        this.layer.addTo(map);\n    }\n\n    update(\n        multigraphOptions?: MultigraphRequestOptions,\n        vectorTileoptions?: {vectorTileLayerStyles: any},\n        sources?: LatLngIdTravelMode[]): Promise<any>  {\n        if (multigraphOptions) {\n            this.multigraphOptions = multigraphOptions;\n        }\n        if (vectorTileoptions) {\n            this.vectorTileoptions = vectorTileoptions;\n        }\n        if (sources) {\n            this.sources = sources;\n        }\n\n        return this.createLayer();\n    }\n\n    async createLayer() {\n        if (this.map && this.layer) {\n            this.map.removeLayer(this.layer);\n        }\n        const url = await this.tgmClient.multigraph.getTiledMultigraphUrl(this.sources, this.multigraphOptions, 'mvt');\n        this.layer = (L as any).vectorGrid.protobuf(url, this.vectorTileoptions);\n        if (this.map && this.layer) {\n            this.layer.addTo(this.map);\n        }\n        return;\n    }\n}\n"],"names":["geometry.webMercatorToLeaflet","tslib_1.__extends","simplify.clip","geometry","svg.PolygonRenderOptionsData","L.DomUtil","L.Point","L.Browser","L.Layer","L.TileLayer","L.vectorGrid"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,iBAAiB,GAAG,CAAC,UAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;IACpE,OAAO,UAAS,CAAS,EAAE,CAAS,EAAE,KAAiB;QAAjB,sBAAA,EAAA,SAAiB;QACrD,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;QACvB,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;QACvB,OAAO,EAAC,CAAC,GAAA,EAAE,CAAC,GAAA,EAAC,CAAA;KACd,CAAA;CACF,EAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;AAElD,8BAAqC,CAAS,EAAE,CAAS,EAAE,KAAiB;IAAjB,sBAAA,EAAA,SAAiB;IAC1E,OAAO,iBAAiB,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,KAAK,CAAC,CAAA;CAC1D;;ACFD;;;AAGA;IAIE,yBAAY,MAGX;QAND,cAAS,GAAmB,IAAI,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;QAClE,cAAS,GAAmB,IAAI,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAA;QAMlE,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAC3E,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAC5E;KACF;IAED,qCAAW,GAAX,UAAY,CAAS,EAAE,CAAS;QAC9B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAChD,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAChD,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAChD,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;KACjD;IAED,gCAAM,GAAN,UAAO,MAA2B;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACxD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;KACzD;IAED,yCAAe,GAAf,UAAgB,MAA2B;QACzC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACjE,OAAO,IAAI,CAAA;KACZ;;;;;;;;IAUD,kCAAQ,GAAR,UAAS,MAA2B;QAClC,QACE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,EACvC;KACF;IAED,oCAAU,GAAV,UAAW,MAA2B;QACpC,OAAO,EACL,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CACtC,CAAA;KACF;IAED,4CAAkB,GAAlB,UAAmB,MAAkB;QAAlB,uBAAA,EAAA,UAAkB;QACnC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAA;QAC1D,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAA;QAE1D,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAA;QACzB,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAA;QACzB,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAA;QACzB,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAA;QAEzB,OAAO,IAAI,CAAA;KACZ;IAED,4CAAkB,GAAlB,UAAmB,MAAc;QAC/B,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAA;QAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAA;QAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAA;QAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAA;QAE1B,OAAO,IAAI,CAAA;KACZ;IAED,sCAAY,GAAZ;QACE,OAAO;;;;;YAKL,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACtD,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACtD,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACtD,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACvD,CAAA;KACF;IAED,mCAAS,GAAT,UAAU,OAAyD;QACjE,OAAO,IAAI,eAAe,CAAC;YACzB,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACtD,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACvD,CAAC,CAAA;KACH;IAED,+BAAK,GAAL;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAA;KAC3C;IAGD,gCAAM,GAAN;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAA;KAC3C;IAED,8BAAI,GAAJ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAA;KACxB;IAED,6BAAG,GAAH;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAA;KACxB;IACH,sBAAC;CAAA,IAAA;AAOD;;;AAGA;IACE,wBAAmB,CAAS,EAAS,CAAS;QAA3B,MAAC,GAAD,CAAC,CAAQ;QAAS,MAAC,GAAD,CAAC,CAAQ;KAC7C;;;;IAKD,oCAAW,GAAX,UAAY,MAAsB,EAAE,KAAqB,EAAE,SAAiB;QAC1E,IAAI,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE;YAC9C,OAAO,KAAK,CAAA;SACb;QAED,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAA;SACZ;QAED,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAA;SACZ;QAED,IAAM,GAAG,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3G,QAAQ,GAAG,GAAG,SAAS,IAAK,GAAG,GAAG,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAC;KAC5F;;;;;IAMD,0CAAiB,GAAjB,UAAkB,KAAqB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;KAChF;IACH,qBAAC;CAAA,IAAA;AAED;;;AAGA;IAIE,6BAAY,WAA+B;QAA3C,iBAOC;QATD,eAAU,GAAoB,IAAI,eAAe,EAAE,CAAA;QAGjD,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,UAAA,UAAU;YACtC,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;YAEzD,IAAM,IAAI,GAAGA,oBAA6B,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3E,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;SAC1C,CAAC,CAAA;KACH;IACH,0BAAC;CAAA,IAAA;AAED;;;AAGA;IAME,0BAAY,IAAiB;QAA7B,iBAcC;QAhBD,eAAU,GAAoB,IAAI,eAAe,EAAE,CAAA;QAGjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QAErB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAA;QAChE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAA;QAEtD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,aAAa;gBACtC,IAAM,UAAU,GAAG,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAA;gBACzD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;gBACjC,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;aAC9C,CAAC,CAAA;SACH;KACF;IAED,2CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;KAC3B;IAED,2CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;KACjC;IACH,uBAAC;CAAA,IAAA;AAED;;;AAGA;IAIE,+BAAY,IAAwB;QAApC,iBASC;QAZD,aAAQ,GAA+C,EAAE,CAAA;QACzD,eAAU,GAAoB,IAAI,eAAe,EAAE,CAAA;QAGjD,IAAI,CAAC,OAAO,CAAC,UAAA,gBAAgB;YAC3B,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,WAAW;gBAC3C,IAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,WAAW,CAAC,CAAA;gBACjD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAA;gBAC3E,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;gBAC/C,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;aAC3C,CAAC,CAAA;SACH,CAAC,CAAA;KACH;IAED,uCAAO,GAAP,UAAQ,QAA+E;QAAvF,iBAGC;QAFC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,GAAA,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,GAAA,CAAC,CAAA;QAC5E,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,CAAC,IAAK,OAAA,QAAQ,CAAC,CAAC,GAAG,EAAE,KAAI,CAAC,QAAQ,CAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAA,CAAC,CAAA;KACrE;IACH,4BAAC;CAAA;;AClPD;;;AAGA,cAAqB,cAAgC,EAAE,WAA6B;IAClF,IAAI,GAAmB,EAAE,GAAmB,EAAE,CAAiB,EAAE,CAAiB,CAAA;IAElF,IAAI,MAAM,GAAG,UAAS,CAAiB;QACrC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;KACzE,CAAA;IAED,IAAI,YAAY,GAAG;QACf,IAAI,EAAE,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EACrD,EAAE,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC7C,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAClC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAC1B,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;QAE1C,OAAO,IAAI,cAAc,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;KACxF,CAAA;IAED,IAAI,UAAU,GAAG,cAAc,CAAA;IAC/B,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IAEzC,KAAK,IAAI,CAAC,IAAI,WAAW,EAAE;QACvB,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAA;QAEpB,IAAI,SAAS,GAAG,UAAU,CAAA;QAC1B,UAAU,GAAG,EAAE,CAAA;QAEf,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QAEnC,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;YACvB,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;YAEd,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACd,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAA;iBAChC;gBACD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aACnB;iBAAM,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;gBACpB,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAA;aAChC;YACD,CAAC,GAAG,CAAC,CAAA;SACR;QACD,GAAG,GAAG,GAAG,CAAA;KACZ;IAED,OAAO,UAAU,CAAA;CAClB;;AClDD,IAAM,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;AACjF,IAAM,UAAU,GAA8B,EAAE,CAAA;AAEhD,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,CAAC;IACtB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAA;CAClC,CAAC,CAAA;AAOF,2CAA2C,MAAgC;IACzE,OAAO,MAAM,IAAK,MAAc,CAAC,KAAK,IAAI,IAAI,CAAA;CAC/C;AAID;IAAA;QACE,YAAO,GAAY,KAAK,CAAA;;QAExB,WAAM,GAAqD,UAAU,CAAA;QACrE,YAAO,GAAW,GAAG,CAAA;QACrB,gBAAW,GAAW,CAAC,CAAA;KACxB;IAAD,+BAAC;CAAA,IAAA;AAED;IAA0CC,wCAAwB;IAChE,8BAAY,IAA8B;QAA1C,YACE,iBAAO,SAGR;QADC,MAAM,CAAC,MAAM,CAAC,KAAI,EAAE,IAAI,CAAC,CAAA;;KAC1B;IAED,8CAAe,GAAf,UAAgB,UAAkB,EAAE,KAAa;QAC/C,IAAI,MAAM,GAA6B,IAAI,CAAA;QAC3C,IAAI,IAAI,CAAC,MAAM,YAAY,KAAK,EAAE;YAChC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SAC5B;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;SACjC;QAED,IAAI,iCAAiC,CAAC,MAAM,CAAC,EAAE;YAC7C,OAAO;gBACL,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,MAAM;gBAC7B,OAAO,EAAE,MAAM,CAAC,OAAO,IAAI,CAAC;aAC7B,CAAA;SACF;aAAM;YACL,OAAO;gBACL,KAAK,EAAE,MAAM,IAAI,MAAM;gBACvB,OAAO,EAAE,CAAC;aACX,CAAA;SACF;KACF;IACH,2BAAC;CAAA,CA3ByC,wBAAwB;;ACnBlE,IAAI,SAAS,GAAG,CAAC,CAAA;AAEjB,oBAAoB,OAAe,EAAE,cAAqE;IACxG,IAAI,cAAc,GAAG,cAAc,CAAC,OAAO,CAAA;IAE3C,OAAO,8BACgB,cAAc,uCACV,cAAc,CAAC,KAAK,6BAC7B,cAAc,CAAC,KAAK,uCACV,cAAc,CAAC,OAAO,qCACxB,cAAc,CAAC,WAAW,qCAC1B,cAAc,CAAC,OAAO,4BAEjC,OAAO,sBAErB,CAAA;CACF;AAED,uBAAuB,QAAe,EAAE,KAAa,EAAE,MAAc;IACnE,OAAO,8DAC2C,KAAK,SAAI,MAAM,oKAGvD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBACpB,CAAA;CACV;AAED,8BAA8B,QAAe,EAAE,KAAa,EAAE,MAAc;IAC1E,IAAI,EAAE,GAAG,cAAc,GAAG,SAAS,EAAE,CAAA;IACrC,IAAM,QAAQ,GAAG,aAAW,KAAK,aAAQ,KAAK,SAAI,MAAM,aAAQ,MAAM,OAAI,CAAA;IAC1E,IAAM,KAAK,GAAG,kCAAgC,EAAE,cAAS,QAAQ,QAAK,CAAA;IACtE,IAAM,MAAM,GAAG,wCAEM,EAAE,kFAC+C,QAAQ,yBACpE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,qCAG5B,CAAA;IAED,OAAQ,8DAC0C,KAAK,SAAI,MAAM,oKAGvD,KAAK,oBACL,MAAM,iBACP,CAAA;CACV;;;;;;;;AASD,gBAAuB,QAAyB,EACzB,UAA2B,EAC3B,UAAkB,EAClB,aAAoC,EACpC,OAA6B;;IAElD,IAAM,OAAO,GAAGD,oBAA6B,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAA;IACzG,IAAM,OAAO,GAAGA,oBAA6B,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAA;IAEzG,IAAI,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE;QACzB,2BAA+C,EAA9C,iBAAS,EAAE,iBAAS,CAA0B;KAChD;IAED,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACzC,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACzC,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACxC,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAGxC,IAAI,iBAAiB,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC;SAC1B,SAAS,CAACA,oBAA6B,CAAC,CAAA;IAEnE,IAAI,2BAA2B,GAAG,iBAAiB,CAAC,YAAY,EAAE,CAAA;IAElE,0BAA0B,QAAe,EAAE,MAAwB;;QAEjE,MAAM,GAAGE,IAAa,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAA;QAE3D,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,CAAC;YACtB,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA;YAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,GAAG,WAAW,CAAA;YAC1D,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,GAAG,WAAW,CAAA;YAC1D,IAAM,cAAc,GAAM,MAAM,SAAI,CAAC,SAAI,CAAG,CAAA;YAC5C,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;SAC9B,CAAC,CAAA;QAEF,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACnB;QAED,OAAO,QAAQ,CAAA;KAChB;IAED,uBAAuB,OAAyB;QAC9C,IAAI,QAAQ,GAAQ,EAAE,CAAA;QAEtB,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YAC3C,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAA;YAC7D,OAAO,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,UAAA,aAAa;gBAC9C,IAAI,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;oBACjD,gBAAgB,CAAC,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,CAAA;iBACjD;aACF,CAAC,CAAA;SACH;QAED,OAAO,QAAQ,CAAA;KAChB;IAED,IAAM,QAAQ,GAAU,EAAE,CAAA;IAC1B,aAAa,CAAC,OAAO,CAAC,UAAC,UAAU,EAAE,QAAQ,EAAE,CAAC;QAC5C,IAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QAC7E,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YACvB,IAAM,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;YAC5D,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,eAC3B,aAAa,IAChB,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,KAAK,EAAE,OAAO,CAAC,OAAO,GAAG,OAAO,GAAG,aAAa,CAAC,KAAK,IACtD,CAAC,CAAA;SACJ;KACF,CAAC,CAAA;IAEF,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAA;IAC1D,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAA;IAE3D,IAAI,OAAe,CAAA;IACnB,IAAI,OAAO,CAAC,OAAO,EAAE;QACnB,OAAO,GAAG,oBAAoB,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;KACxD;SAAM;QACL,OAAO,GAAG,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;KACjD;IAED,OAAO,EAAC,OAAO,SAAA,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAC,CAAA;CAChC;;ACjJD;IAIE,wBAAoB,GAAiB,EAAU,GAAiB;QAA5C,oBAAA,EAAA,SAAiB;QAAU,oBAAA,EAAA,SAAiB;QAA5C,QAAG,GAAH,GAAG,CAAc;QAAU,QAAG,GAAH,GAAG,CAAc;KAC/D;IAED,iCAAQ,GAAR,UAAS,QAAmB;QAA5B,iBAiBC;QAhBC,IAAM,MAAM,GAAG;YACb,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,CAAA;YAC9B,YAAY,CAAC,KAAI,CAAC,YAAY,CAAC,CAAA;YAE/B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAA;YACvB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAA;YAExB,QAAQ,EAAE,CAAA;SACX,CAAA;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;SAChD;QAED,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QAC/B,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;KACjD;IAED,wCAAe,GAAf,UAAgB,QAAmB;QAAnC,iBAcC;QAbC,IAAM,MAAM,GAAG;YACb,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,CAAA;YAE9B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAA;YAEvB,QAAQ,EAAE,CAAA;SACX,CAAA;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;SAChD;QAED,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;KAChC;IACH,qBAAC;CAAA;;AC3BD;;;AAGA;;;;;IAYE,+BAAoB,MAAmC,EACnC,OAAqC;QADrC,WAAM,GAAN,MAAM,CAA6B;QACnC,YAAO,GAAP,OAAO,CAA8B;QATjD,kBAAa,GAAmB,IAAI,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;KAUpE;IAED,0CAAU,GAAV;QACE,OAAO,IAAI,CAAC,UAAU,CAAA;KACvB;;;;IAKD,oCAAI,GAAJ,UAAK,WAA4B;QAAjC,iBA4BC;QA5BI,4BAAA,EAAA,mBAA4B;QAC/B,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,MAAM,EAAE,CAAA;YACb,IAAI,CAAC,MAAM,EAAE,CAAA;YACb,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAA;SACvC;aAAM;YACL,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,EAAE;gBAClC,IAAM,MAAM,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;gBAE7E,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAA;gBAC3B,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAA;gBACrE,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,CAAA;gBAEnE,IAAM,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAA;gBAC/D,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAA;gBAEjE,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE;oBAChC,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAe,EAAE,YAAO,EAAE,uBAAkB,MAAM,UAAK,MAAM,SAAM,CAAA;iBAC1F;qBAAM,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;oBAC/B,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAe,EAAE,YAAO,EAAE,WAAQ,CAAA;iBACzD;aACF;YAED,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;gBACjC,KAAI,CAAC,MAAM,EAAE,CAAA;gBACb,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAA;aACvC,CAAC,CAAA;SACH;KACF;IAEO,sCAAM,GAAd;QACE,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACpC,OAAM;SACP;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;QAEvG,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAA;QAE3B,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAA;QACrC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,CAAA;QACnC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,GAAG,IAAI,CAAA;QACvC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,IAAI,CAAA;QACzC,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAA;KAC3B;;;;IAKD,2CAAW,GAAX;QACE,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QACzC,GAAG,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAA;QAC9B,GAAG,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAA;QAC7B,GAAG,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAA;QAC/B,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,KAAK,CAEvD;QAAO,GAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,GAAG,QAAQ,CACnD;QAAO,GAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,IAAI,CACvC;QAAO,GAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,OAAO,CAC/C;QAAO,GAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,WAAW,CAAA;QAE/C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAA;QAErB,OAAO,IAAI,CAAC,UAAU,CAAA;KACvB;;;;IAKD,wCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;KACvB;;;;;IAMD,uCAAO,GAAP,UAAQ,YAAgC;QACtC,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,qBAAqB,CAAC,YAAY,CAAC,CAAA;SACrD;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;SAClB;QACD,IAAI,CAAC,MAAM,EAAE,CAAA;KACd;IAED,0CAAU,GAAV,UAAW,OAAgB;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA;QAC9B,IAAI,CAAC,MAAM,EAAE,CAAA;KACd;IAED,yCAAS,GAAT,UAAU,MAAsC;QAC9C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAA;QAC5B,IAAI,CAAC,MAAM,EAAE,CAAA;KACd;IAED,0CAAU,GAAV,UAAW,OAAe;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA;QAE9B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,KAAK,CAAA;SACnE;KACF;IAED,8CAAc,GAAd,UAAe,WAAmB;QAChC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAA;QACtC,IAAI,CAAC,MAAM,EAAE,CAAA;KACd;IAEO,iDAAiB,GAAzB,UAA0B,UAAkB;QAC1C,IAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAA;QACxC,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAA;QAEpC,IAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAA;QAC/D,IAAM,MAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAA;QAC5C,IAAI,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAA;QAE5H,IAAI,OAAO,EAAE;YACX,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;YAC1B,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAA;SACzC;QAED,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAA;;QAGrC,IAAM,SAAS,GAAGC,aAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;QAC7E,IAAM,SAAS,GAAGA,aAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;QAC7E,IAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAC,SAAS,WAAA,EAAE,SAAS,WAAA,EAAC,CAAC,CAAA;QAC3E,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QAC/H,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAA;;QAGrF,OAAO,EAAC,MAAM,QAAA,EAAE,SAAS,WAAA,EAAC,CAAA;KAC3B;IAEO,sCAAM,GAAd,UAAe,MAAa;QAAb,uBAAA,EAAA,aAAa;QAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAM;SACP;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,CAAA;YAC9B,OAAM;SACP;QAED,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAA;QACxC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;QAE3C,IAAM,UAAU,GAAG,GAAG,CAAA;QAChB,IAAA,uCAAwD,EAAvD,kBAAM,EAAE,wBAAS,CAAsC;QAEvD,IAAA,2GAAO,CAAiG;QAE/G,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,OAAO,CAAA;QAEnC,IAAM,SAAS,GAAGA,aAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;QAC9E,IAAM,SAAS,GAAGA,aAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;QAE9E,IAAI,CAAC,MAAM,GAAG,EAAC,SAAS,WAAA,EAAE,SAAS,WAAA,EAAC,CAAA;QAEpC,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,EAAE,CAAA;SACd;KACF;IACH,4BAAC;CAAA;;ACtMD;IAAkDF,gDAA4B;IAA9E;;KACC;IAAD,mCAAC;CAAA,CADiDG,wBAA4B,GAC7E;AAED;;;AAGA;IAA8CH,4CAAO;;;;;IAUnD,kCAAY,OAA+C;QAA3D,YACE,iBAAO,SAGR;QAXO,kBAAY,GAAG,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,YAAY,GAAG,OAAO,GAAA,CAAC,CAAA;QAUxE,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,4BAA4B,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,CAAA;;KAChF;;;;;IAMK,0CAAO,GAAb,UAAc,YAAgC;;;;4BAC5C,qBAAM,IAAI,CAAC,YAAY,EAAA;;wBAAvB,SAAuB,CAAA;wBACvB,IAAI,IAAI,CAAC,OAAO,EAAE;4BAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;yBACnC;;;;;KACF;;;;IAKD,uCAAI,GAAJ;QACE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChBI,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,IAAIC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAC1E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACxB;KACF;;;;;IAMD,wCAAK,GAAL,UAAM,GAAU;QAAhB,iBAgEC;QA/DC,IAAI,CAAC,OAAO,GAAG,IAAI,qBAAqB,CAAC;YACvC,OAAO;gBACL,OAAO,GAAG,CAAC,OAAO,EAAE,CAAA;aACrB;YAED,WAAW,EAAX;gBACE,IAAM,MAAM,GAAG,GAAG,CAAC,SAAS,EAAE,CAAA;gBAC9B,OAAO,IAAI,eAAe,CAAC;oBACzB,SAAS,EAAEH,aAAQ,CAAC,mBAAmB,CAAC;wBACtC,GAAG,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC,GAAG;wBAC9B,GAAG,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC,GAAG;qBAC/B,CAAC;oBACF,SAAS,EAAEA,aAAQ,CAAC,mBAAmB,CAAC;wBACtC,GAAG,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC,GAAG;wBAC9B,GAAG,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC,GAAG;qBAC/B,CAAC;iBACH,CAAC,CAAA;aACH;YAED,gBAAgB,EAAhB,UAAiB,MAAmB;gBAClC,IAAM,SAAS,GAAG,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;gBAC1D,IAAM,SAAS,GAAG,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;gBAE1D,OAAO,EAAC,SAAS,WAAA,EAAE,SAAS,WAAA,EAAC,CAAA;aAC9B;SACF,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QAEhB,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAA;QACtC,GAAG,CAAC,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAA;QACpCE,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,eAAe,IAAI,AAAO,UAAU,AAAS,CAAC,CAAC,CAAA;QAEvE,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;;QAI3C,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QAClC,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QAClC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QAEnC,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,IAAIE,SAAS,CAAC,KAAK,CAAA;QACnE,IAAI,QAAQ,EAAE;YACZ,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,UAAC,CAAkB;gBACpC,IAAI,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBAEvB,IAAM,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAA;oBAErD,IAAM,IAAI,GAAI,GAAW,CAAC,sBAAsB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAA;oBACzG,IAAM,IAAI,GAAI,GAAW,CAAC,sBAAsB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAA;oBACzG,IAAM,IAAI,GAAI,GAAW,CAAC,sBAAsB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,EAAE,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAA;oBACvH,IAAM,IAAI,GAAK,GAAW,CAAC,sBAAsB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,EAAE,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAA;oBAExH,IAAM,GAAG,GAAG,EAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAC,CAAA;oBAChE,IAAM,GAAG,GAAG,EAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAC,CAAA;oBAEhEF,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,IAAIC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;iBAC9E;aACF,CAAC,CAAA;SACH;QAED,IAAI,CAAC,YAAY,EAAE,CAAA;QACnB,IAAI,CAAC,IAAI,EAAE,CAAA;QAEX,OAAO,IAAI,CAAA;KACZ;IAED,2CAAQ,GAAR;QACE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAA;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;SACpB;QACD,OAAO,IAAI,CAAA;KACZ;;;;;IAMD,6CAAU,GAAV,UAAW,OAAgB;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA;QAC9B,IAAI,CAAC,IAAI,EAAE,CAAA;KACZ;;;;;IAMD,4CAAS,GAAT,UAAU,MAAwD;QAChE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAA;QAC5B,IAAI,CAAC,IAAI,EAAE,CAAA;KACZ;;;;;IAMD,6CAAU,GAAV,UAAW,OAAe;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA;QAE9B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAA;YACrC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,KAAK,CAAA;SACvF;KACF;;;;;IAMD,iDAAc,GAAd,UAAe,WAAmB;QAChC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAA;QACtC,IAAI,CAAC,IAAI,EAAE,CAAA;KACZ;IACH,+BAAC;CAAA,CA1J6CE,OAAO;;ACXrD;IAAyCP,uCAAW;IAChD,6BAAY,SAAwB,EAAE,WAAmB,EAAE,OAA2B;QAAtF,iBAYC;QAVG,IAAI,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SAC1E;QAED,IAAM,OAAO,GAAG,kCAAkC;YAC9C,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC;YAC9C,gCAAgC;YAChC,SAAS,CAAC,UAAU,CAAC;QAEzB,QAAA,kBAAM,OAAO,EAAG,OAAO,CAAC,SAAC;;KAC5B;IAEM,oCAAgB,GAAvB,UAAwB,SAAwB;QAC5C,IAAM,aAAa,GAAiD,EAAE,CAAA;QACtE,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,WAAW;YAC/C,aAAa,CAAC,WAAW,CAAC,GAAG,IAAI,mBAAmB,CAAC,SAAS,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;SACpF,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;KACxB;IACL,0BAAC;CAAA,CAtBwCQ,WAAW;;ACCpD;IAOI,uCACI,SAAwB,EACxB,OAA6B,EAC7B,iBAA2C,EAC3C,iBAA+C;QAE/C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;KAC9D;IAEK,6CAAK,GAAX,UAAY,GAAU;;;;;6BACd,CAAC,IAAI,CAAC,KAAK,EAAX,wBAAW;wBACX,qBAAM,IAAI,CAAC,WAAW,EAAE,EAAA;;wBAAxB,SAAwB,CAAC;;;wBAE7B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;wBACf,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;;;;KACzB;IAED,8CAAM,GAAN,UACI,iBAA4C,EAC5C,iBAAgD,EAChD,OAA8B;QAC9B,IAAI,iBAAiB,EAAE;YACnB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;SAC9C;QACD,IAAI,iBAAiB,EAAE;YACnB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;SAC9C;QACD,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;QAED,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAC7B;IAEK,mDAAW,GAAjB;;;;;;wBACI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;4BACxB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACpC;wBACW,qBAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,EAAA;;wBAAxG,GAAG,GAAG,SAAkG;wBAC9G,IAAI,CAAC,KAAK,GAAIC,YAAoB,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;wBACzE,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;4BACxB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBAC9B;wBACD,sBAAO;;;;KACV;IACL,oCAAC;CAAA;;;;;;;;;;;;;;;"}