import { LatLngId, SRID } from '../../types';
import { TargomoClient } from '../targomoClient';
import { PolygonRequestOptions } from '../../types/options/polygonRequestOptions';
import { TravelRequestPayload } from './travelRequestPayload';
export interface PolygonSvgOptions extends PolygonRequestOptions {
    serializer: 'json';
}
export interface PolygonGeoJsonOptions extends PolygonRequestOptions {
    serializer: 'geojson';
}
export declare class PolygonPayloadOptions {
    minPolygonHoleSize: number;
    buffer: number;
    simplify: number;
    srid: SRID;
    format?: string;
    quadrantSegments: number;
    serializer: 'json' | 'geojson';
    intersectionMode: 'average' | 'union' | 'intersection' | 'none';
    decimalPrecision: number;
    values: number[];
}
export declare class PolygonRequestPayload extends TravelRequestPayload {
    polygon: PolygonPayloadOptions;
    constructor(client: TargomoClient, sources: LatLngId[], options: PolygonSvgOptions | PolygonGeoJsonOptions);
}
