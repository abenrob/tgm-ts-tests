import { TargomoClient } from './targomoClient';
import { OptimizationRequestOptions } from '../types/options/optimizationRequestOptions';
import { LatLngId } from '../types/types';
import { OptimizationResult } from '../types/responses/optimizationResult';
/**
 * @Topic Optimizations
 */
export declare class OptimizationsClient {
    private client;
    constructor(client: TargomoClient);
    /**
     * Initiates a an optimimization simulation. Given a list of locations and simulation parameters it tries to
     * derive a subset of these locations that are optimal.
     *
     * @param sources
     * @param options
     */
    create(sources: LatLngId[], options: OptimizationRequestOptions): Promise<any>;
    /**
     * Checks if the given optimization simulation have completed and have results ready for retrieval
     *
     * @param optimizationId
     */
    ready(optimizationId: number | number[]): Promise<{
        [id: string]: boolean;
    }>;
    /**
     * Retrieve the results of an optimization simulation
     *
     * @param optimizationId
     */
    fetch(optimizationId: number): Promise<OptimizationResult>;
}
