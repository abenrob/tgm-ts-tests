import { TargomoClient } from './targomoClient';
import { LatLngId, StatisticsList, ReachableTile, StatisticsGroupMeta, StatisticsGroupId, StatisticsItem, StatisticsItemMeta, StatisticsRequestOptions, StatisticsTravelRequestOptions, StatisticsGeometryRequestOptions, StatisticsGroupEnsemble } from '../index';
import { StatisticsResult } from '../types/responses/index';
import { StatisticsGeometryResult } from '../types/responses/statisticsGeometryResult';
/**
 * @Topic Statistics
 */
export declare class StatisticsClient {
    private client;
    private statisticsMetadataCache;
    private statisticsEnsemblesCache;
    constructor(client: TargomoClient);
    /**
     *
     * @param sources
     * @param options
     */
    combined(sources: LatLngId[], // sources: LatLng[],
    options: StatisticsRequestOptions): Promise<StatisticsList>;
    /**
    * Make a statistics request to the r360 services
    */
    individual(sources: LatLngId[], // sources: LatLng[],
    options: StatisticsRequestOptions): Promise<{
        [id: string]: StatisticsList;
    }>;
    /**
    * Make a statistics request to the r360 services
    */
    travelTimes(sources: LatLngId[], options: StatisticsTravelRequestOptions): Promise<ReachableTile>;
    /**
     *
     * @param sources
     * @param options
     */
    dependent(sources: LatLngId[], // was LatLng[]
    options: StatisticsRequestOptions): Promise<StatisticsResult>;
    /**
     *
     * @param sources
     * @param options
     */
    geometry(geometry: string, options: StatisticsGeometryRequestOptions): Promise<StatisticsGeometryResult>;
    /**
     *
     * @param group
     */
    metadata(group: StatisticsGroupMeta | StatisticsGroupId): Promise<StatisticsGroupMeta>;
    /**
     *
     */
    metadataKey(group: StatisticsGroupMeta | StatisticsGroupId, statistic: StatisticsItem): Promise<StatisticsItemMeta>;
    /**
     * Potentially decorate a layer route with excluded statistics.
     */
    tileRoute(group: StatisticsGroupMeta | StatisticsGroupId, include?: StatisticsItem[]): string;
    /**
     *
     * @param sources
     * @param options
     */
    ensembles(): Promise<{
        [id: string]: StatisticsGroupEnsemble;
    }>;
}
