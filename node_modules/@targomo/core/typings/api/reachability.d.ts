import { TargomoClient } from './targomoClient';
import { LatLngId, LatLngIdTravelTime, LatLngIdTravelMode, TimeResult, ReachabilityResult } from '../index';
import { TimeRequestOptions } from '../types/options/timeRequestOptions';
/**
 * @Topic Reachability
 */
export declare class ReachabilityClient {
    private client;
    constructor(client: TargomoClient);
    /**
     *
     * @param sources
     * @param targets
     * @param options
     */
    individual(sources: LatLngIdTravelMode[], targets: LatLngId[], options: TimeRequestOptions): Promise<TimeResult[]>;
    /**
     * Makes a reachability request to the r360 services, and returns the raw results of the request
     *
     * @param sources
     * @param targets
     * @param options
     */
    combined(sources: LatLngId[], targets: LatLngId[], options: TimeRequestOptions): Promise<ReachabilityResult[]>;
    /**
     * Makes a reachability request to the r360 services and returns the number of locations that are reachable within the given parameters
     *
     * @param sources
     * @param targets
     * @param options
     */
    count(sources: LatLngId[], targets: LatLngId[], options: TimeRequestOptions): Promise<number>;
    /**
     * Makes a reachability requests to the r360 services and returns the input targets decorated with the resulting travel time
     *
     * @param sources
     * @param targets
     * @param options
     */
    locations<T extends LatLngIdTravelTime>(sources: LatLngId[], targets: T[], options: TimeRequestOptions): Promise<T[]>;
}
