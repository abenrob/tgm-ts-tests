import { TargomoClient } from './targomoClient';
import { LatLngId } from '../index';
import { PolygonGeoJsonOptions, PolygonSvgOptions } from './payload/polygonRequestPayload';
import { PolygonSvgResult } from '../types/responses/polygonSvgResult';
import { FeatureCollection, MultiPolygon } from 'geojson';
import { BoundingBox } from '../types';
/**
 * @Topic Polygons
 */
export declare class PolygonsClient {
    private client;
    constructor(client: TargomoClient);
    /**
     * Request geojson polygons for one or more sources from r360 service
     * @param sources
     * @param options
     */
    fetch(sources: LatLngId[], options: PolygonGeoJsonOptions): Promise<FeatureCollection<MultiPolygon>>;
    /**
     * Request svg polygons for one or more sources from r360 service
     * @param sources
     * @param options
     */
    fetch(sources: LatLngId[], options: PolygonSvgOptions): Promise<PolygonArray>;
    private _executeFetch;
}
/**
 * Class to extend Array for polygons result to add maxBounds method to array results
 */
export declare class PolygonArray extends Array<PolygonSvgResult> {
    private constructor();
    static create(items: Array<PolygonSvgResult>, metadata?: any): PolygonArray;
    getMaxBounds(): BoundingBox;
}
