import { Cache } from '../util/cache';
import { TargomoClient } from '../api/index';
export declare class RequestsUtil {
    private options?;
    constructor(options?: {
        debug?: boolean;
        timeout?: number;
    });
    fetch(url: string, method?: string, payload?: any, headers?: {
        [index: string]: string;
    }): Promise<any>;
    fetchData(url: string, method?: string, payload?: any, headers?: {
        [index: string]: string;
    }): Promise<any>;
    /**
     *
     * @param cache
     * @param url
     * @param method
     * @param payload
     */
    fetchCached<T>(cache: boolean | Cache<T>, url: string, method?: string, payload?: any, headers?: {
        [index: string]: string;
    }): Promise<any>;
    /**
     *
     * @param cache
     * @param url
     * @param method
     * @param payload
     */
    fetchCachedData<T>(cache: boolean | Cache<T>, url: string, method?: string, payload?: any, headers?: {
        [index: string]: string;
    }): Promise<any>;
}
export declare function requests(client?: TargomoClient, options?: {
    requestTimeout?: number;
}): RequestsUtil;
